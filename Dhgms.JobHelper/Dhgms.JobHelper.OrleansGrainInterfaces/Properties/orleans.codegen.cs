//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace Dhgms.JobHelper.OrleansGrainInterfaces
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using Orleans.Runtime;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class JobGrainFactory<TJobResult>
    
    {
        

                        public static IJobGrain<TJobResult> GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IJobGrain<TJobResult>), -679519484, primaryKey));
                        }

                        public static IJobGrain<TJobResult> GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IJobGrain<TJobResult>), -679519484, primaryKey, grainClassNamePrefix));
                        }

                        public static IJobGrain<TJobResult> GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IJobGrain<TJobResult>), -679519484, primaryKey));
                        }

                        public static IJobGrain<TJobResult> GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(IJobGrain<TJobResult>), -679519484, primaryKey, grainClassNamePrefix));
                        }

            public static IJobGrain<TJobResult> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return JobGrainReference<TJobResult>.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Dhgms.JobHelper.OrleansGrainInterfaces.IJobGrain<TJobResult>")]
        internal class JobGrainReference<TJobResult> : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Dhgms.JobHelper.OrleansGrainInterfaces.IJobGrain<TJobResult>
        
        {
            

            public static IJobGrain<TJobResult> Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (IJobGrain<TJobResult>) global::Orleans.Runtime.GrainReference.CastInternal(typeof(IJobGrain<TJobResult>), (global::Orleans.Runtime.GrainReference gr) => { return new JobGrainReference<TJobResult>(gr);}, grainRef, -679519484);
            }
            
            protected internal JobGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal JobGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -679519484;
                }
            }
            
            protected override string InterfaceName
            {
                get
                {
                    return "Dhgms.JobHelper.OrleansGrainInterfaces.IJobGrain<TJobResult>";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                JobGrainReference<TJobResult> input = ((JobGrainReference<TJobResult>)(original));
                return ((JobGrainReference<TJobResult>)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                JobGrainReference<TJobResult> input = ((JobGrainReference<TJobResult>)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return JobGrainReference<TJobResult>.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == 1900190341));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return JobGrainMethodInvoker<TJobResult>.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<TJobResult> Dhgms.JobHelper.OrleansGrainInterfaces.IJobGrain<TJobResult>.Execute()
            {

                return base.InvokeMethodAsync<TJobResult>(-1673325079, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Dhgms.JobHelper.OrleansGrainInterfaces.IJobGrain<TJobResult>", -679519484)]
    internal class JobGrainMethodInvoker<TJobResult> : global::Orleans.CodeGeneration.IGrainMethodInvoker
    
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -679519484;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -679519484:  // IJobGrain`1
                        switch (methodId)
                        {
                            case -1673325079: 
                                return ((IJobGrain<TJobResult>)grain).Execute().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -679519484:  // IJobGrain`1
                    switch (methodId)
                    {
                        case -1673325079:
                            return "Execute";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
